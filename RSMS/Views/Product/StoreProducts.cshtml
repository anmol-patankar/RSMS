@model List<RSMS.ViewModels.TotalProductInfoModel>
<h1 style="text-align: center;">Store Products</h1>
<link rel="stylesheet" href="~/css/viewproducts.css" />

@{
    bool isAdmin = ViewBag.CurrentUser.RoleId > 6;
    bool isManager = ViewBag.CurrentUser.RoleId == 6;
    bool isManagerOfStore = isManager && ViewBag.CurrentUser.StoreId == ViewBag.StoreId;
}
<button class="add-product-stock-btn" id="addProductStockbtn">Add Product</button>
<div style="margin-top: 20px; display: flex; flex-wrap: wrap; justify-content: center;">
    <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var product in Model)
        {
            <div class="col" style="font-family: Arial; font-size: 16px;">

                <div class="card h-100 border-dark">
                    <div class="card-header" style="text-align: center;">
                        <large>@product.Name</large>
                    </div>
                    <img src="~/ProductImages/@product.Photo" class="card-img-top" alt="@product.Description">
                    <hr />
                    <div class="card-body">

                        <div class="product-detail">
                            <p>Pretax Price:</p>
                            <span>@product.PriceBeforeTax</span>
                        </div>

                        @if (isAdmin || isManagerOfStore)
                        {
                            <div class="product-detail discount-wrapper">
                                <p>Discount Percent:</p>
                                <div class="button-group">
                                    <button type="button" class="discount-adjust-btn subtract-btn" data-operation="subtract">-</button>
                                    <input type="number" min="0" max="100" name="discountPercent" class="discount-input" id="@product.ProductId-discountPercent" value="@product.DiscountPercent" />
                                    <button type="button" class="discount-adjust-btn add-btn" data-operation="add">+</button>
                                </div>
                            </div>
                            <div class="product-detail quantity-wrapper">
                                <p>Quantity:</p>
                                <div class="button-group">
                                    <button type="button" class="quantity-adjust-btn subtract-btn" data-operation="subtract">-</button>
                                    <input type="number" min="0" max="10000" name="quantity" class="quantity-input" id="@product.ProductId-quantity" value="@product.Quantity" />
                                    <button type="button" class="quantity-adjust-btn add-btn" data-operation="add">+</button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="product-detail">
                                <p>Discount Percent:</p>
                                <span>@product.DiscountPercent</span>
                            </div>
                            <div class="product-detail">
                                <strong>Quantity:</strong>
                                <span>@product.Quantity</span>
                            </div>
                        }
                        <hr />
                        @product.Description
                    </div>
                    @if (isAdmin || isManagerOfStore)
                    {
                        <small div class="card-footer align-center" style="display:flex; justify-content: space-between; align-items: baseline;">
                            Product ID: @product.ProductId
                            <div class="actions">
                                @if (isAdmin)
                                {
                                    <form method="get" action="@Url.Action("EditProductInfo", "Product")" style="display: inline;">
                                        <input type="hidden" name="productId" value="@product.ProductId" />
                                        <button type="submit" class="edit-btn">Edit</button>
                                    </form>
                                }
                                <button type="submit" data-product-id="@product.ProductId" class="qty-discount-update save-quantity-btn edit-btn">Save</button>
                            </div>

                        </small>
                    }
                </div>
            </div>
        }
    </div>
    <div class="modal fade" id="transactionDetailsModal" tabindex="-1" role="dialog" aria-labelledby="transactionDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content" id="modal-content">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $(document).on("click", ".qty-discount-update", function () {
            const productId = $(this).data("product-id");
            const quantity = document.getElementById(`${productId}-quantity`).value;
            const discountPercent = document.getElementById(`${productId}-discountPercent`).value;
            const storeId = @ViewBag.StoreId;

            $.ajax({
                url: '/Product/UpdateStoreQtyAndDiscount',
                type: 'POST',
                data: {
                    storeId: storeId,
                    productId: productId,
                    quantity: quantity,
                    discountPercent: discountPercent
                },
                success: function (response) {
                    const data = JSON.parse(response);
                    const quantityElement = document.getElementById(`${productId}-quantity`);
                    const discountPercentElement = document.getElementById(`${productId}-discountPercent`);
                    quantityElement.value = data.Quantity;
                    discountPercentElement.value = data.DiscountPercent;
                },
            });
        });

        $(document).on("click", ".add-product-stock-btn", function () {
            const storeId = @ViewBag.StoreId;

            $.ajax({
                url: '/Store/AddProductStock',
                type: 'GET',
                data: {
                    storeId: storeId
                },
                success: function (response) {
                    $('#modal-content').html(response);
                    $('#transactionDetailsModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error(`Error occurred: ${status} ${error}`);
                }
            });
        });

        document.querySelectorAll('.discount-adjust-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const input = btn.parentElement.querySelector('.discount-input');
                let value = parseInt(input.value);
                value = btn.dataset.operation === 'add' ? Math.min(value + 1, 100) : Math.max(value - 1, 0);
                input.value = value;
                updateHiddenInputs(input, 'discountPercentInput');
            });
        });

        document.querySelectorAll('.quantity-adjust-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const input = btn.parentElement.querySelector('.quantity-input');
                let value = parseInt(input.value);
                value = btn.dataset.operation === 'add' ? value + 1 : Math.max(value - 1, 0);
                input.value = value;
                updateHiddenInputs(input, 'quantityInput');
            });
        });

        document.querySelectorAll('.discount-input, .quantity-input').forEach(input => {
            input.addEventListener('input', () => updateHiddenInputs(input, input.classList.contains('discount-input') ? 'discountPercentInput' : 'quantityInput'));
        });

        function updateHiddenInputs(input, hiddenInputId) {
            document.getElementById(hiddenInputId).value = input.value;
        }
    });
</script>
