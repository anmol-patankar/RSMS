@model List<RSMS.ViewModels.TotalProductInfoModel>
<h1 style="text-align: center;">Store Products</h1>
<link rel="stylesheet" href="~/css/dashboard.css" />
<link rel="stylesheet" href="~/css/viewproducts.css" />
@* <script src="~/js/storeproducts.js"></script> *@

<div style="display: flex; justify-content: center;">
    <p>This is the list of products available in the store.</p>
</div>
@{
    bool isAdmin = ViewBag.CurrentUser.RoleId > 6;
    bool isManager = ViewBag.CurrentUser.RoleId == 6;
    bool isManagerOfStore = isManager && ViewBag.CurrentUser.StoreId == ViewBag.StoreId;
}<div style="margin-top: 20px; display: flex; flex-wrap: wrap; justify-content: center;">
    @foreach (var product in Model)
    {
        <div class="product-card">
            <div class="product-card-header">
                <h3>@product.Name</h3>
            </div>
            <div class="product-card-body">
                <div class="product-detail">
                    <strong>Product ID:</strong>
                    <span>@product.ProductId</span>
                </div>
                @* <div class="product-detail">
            <strong>Description:</strong>
            <span>@product.Description</span>
            </div> *@
                <div class="product-detail">
                    <strong>Pretax Price:</strong>
                    <span>@product.PriceBeforeTax</span>
                </div>

                @if (isAdmin || isManagerOfStore)
                {
                    <div class="product-detail discount-wrapper">
                        <strong>Discount Percent:</strong>
                        <div class="button-group">
                            <button type="button" class="discount-adjust-btn subtract-btn" data-operation="subtract">-</button>
                            <input type="number" min="0" max="100" name="discountPercent" class="discount-input" id="@product.ProductId-discountPercent" value="@product.DiscountPercent" />
                            <button type="button" class="discount-adjust-btn add-btn" data-operation="add">+</button>
                        </div>
                    </div>
                    <div class="product-detail quantity-wrapper">
                        <strong>Quantity:</strong>
                        <div class="button-group">
                            <button type="button" class="quantity-adjust-btn subtract-btn" data-operation="subtract">-</button>
                            <input type="number" min="0" max="10000" name="quantity" class="quantity-input" id="@product.ProductId-quantity" value="@product.Quantity" />
                            <button type="button" class="quantity-adjust-btn add-btn" data-operation="add">+</button>
                        </div>
                    </div>
                }
                else
                {
                    <div class="product-detail">
                        <strong>Discount Percent:</strong>
                        <span>@product.DiscountPercent</span>
                    </div>
                    <div class="product-detail">
                        <strong>Quantity:</strong>
                        <span>@product.Quantity</span>
                    </div>
                }

                @if (isAdmin || isManagerOfStore)
                {
                    <div class="actions">
                        <button type="submit" data-product-id="@product.ProductId" class="qty-discount-update save-quantity-btn edit-btn">Save</button>

                        @if (isAdmin)
                        {
                            <form method="get" action="@Url.Action("EditProductInfo", "Product")" style="display: inline;">
                                <input type="hidden" name="productId" value="@product.ProductId" />
                                <button type="submit" class="edit-btn">Edit</button>
                            </form>
                        }
                    </div>
                }
            </div>
        </div>
    }
</div>
<style>
    .product-card {
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin: 10px;
        padding: 20px;
        width: 300px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .product-card-header {
        text-align: center;
        margin-bottom: 10px;
    }

    .product-detail {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .discount-wrapper, .quantity-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .button-group {
        display: flex;
        align-items: center;
    }

    .discount-adjust-btn, .quantity-adjust-btn {
        margin: 0 5px;
    }

    .actions {
        text-align: center;
        margin-top: 10px;
    }
</style>

<script>
    $(document).ready(function () {
        $(document).on("click", ".qty-discount-update", function () {
            const product_id = $(this).data("product-id");
            const quantity = document.getElementById(`${product_id}-quantity`).value;
            const discountPercent = document.getElementById(`${product_id}-discountPercent`).value;
            const store_id = @ViewBag.StoreId;
            console.log(quantity + discountPercent);
            $.ajax({
                url: '/Product/UpdateStoreQtyAndDiscount',
                type: 'POST',
                data: {
                    storeId: store_id,
                    productId: product_id,
                    quantity: quantity,
                    discountPercent: discountPercent

                },
                success: function (response) {
                    const test = JSON.parse(response);
                    const quantityElement = document.getElementById(`${product_id}-quantity`);
                    const discountPercentElement = document.getElementById(`${product_id}-discountPercent`);
                    quantityElement.value = test.Quantity;
                    discountPercentElement.value = test.DiscountPercent;
                    console.log(test);
                }
            });
        });


        document.querySelectorAll('.discount-adjust-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const input = btn.parentElement.querySelector('.discount-input');
                let value = parseInt(input.value);
                value = btn.dataset.operation === 'add' ? Math.min(value + 1, 100) : Math.max(value - 1, 0);
                input.value = value;
                updateHiddenInputs(input, 'discountPercentInput');
            });
        });

        document.querySelectorAll('.quantity-adjust-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const input = btn.parentElement.querySelector('.quantity-input');
                let value = parseInt(input.value);
                value = btn.dataset.operation === 'add' ? value + 1 : Math.max(value - 1, 0);
                input.value = value;
                updateHiddenInputs(input, 'quantityInput');
            });
        });

        document.querySelectorAll('.discount-input, .quantity-input').forEach(input => {
            input.addEventListener('input', () => updateHiddenInputs(input, input.classList.contains('discount-input') ? 'discountPercentInput' : 'quantityInput'));
        });

        function updateHiddenInputs(input, hiddenInputId) {
            document.getElementById(hiddenInputId).value = input.value;
        }

    });
</script>
